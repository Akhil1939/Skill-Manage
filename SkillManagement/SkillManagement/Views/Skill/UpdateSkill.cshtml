@using SkillEntities.DTOs.Skill
@model SkillDTO

@{
    ViewData["Title"] = "UpdateSkill";
}
@if (TempData.ContainsKey("SuccessMessage"))
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData.ContainsKey("ErrorMessage"))
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<h1>UpdateSkillSkill</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateSkill">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" hidden>
                <label asp-for="SkillId" class="control-label"></label>
                <input asp-for="SkillId" class="form-control"  />
                <span asp-validation-for="SkillId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SkillName" class="control-label"></label>
                <input asp-for="SkillName" class="form-control" />
                <span asp-validation-for="SkillName" class="text-danger"></span>
            </div>

            <div class="form-froup">
                 <label asp-for="Status" class="control-label"></label>
                <select class="form-select" asp-for="Status" aria-label="Default select example">
                    <option value=1 >Active</option>
                    <option value=0>Inactive</option>
                    
                </select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Home">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
